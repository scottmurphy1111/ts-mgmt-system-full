// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model TsSalesRep {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  firstName      String
  lastName       String
  address        String
  city           String
  state          String
  zip            String
  country        String          @default("USA")
  phone          String
  email          String
  company        String
  notes          String?         @db.Text
  producerGroups ProducerGroup[]

  @@index([lastName])
}

model ProducerGroup {
  id                  String             @id @default(uuid())
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  name                String
  dba                 String?
  taxId               String?
  website             String?
  primaryContactName  String
  primaryContactPhone String
  primaryContactEmail String
  primaryContactTitle String?
  producerLocations   ProducerLocation[]
  tsSalesRepId        String
  tsSalesRep          TsSalesRep         @relation(fields: [tsSalesRepId], references: [id])

  @@index([tsSalesRepId])
}

model ProducerLocation {
  id              String         @id @default(uuid())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  name            String
  phone           String
  email           String
  website         String?
  address         String
  city            String
  state           String
  zip             String
  country         String         @default("USA")
  mailingAddress  String?
  mailingCity     String?
  mailingState    String?
  mailingZip      String?
  mailingCountry  String?        @default("USA")
  programs        Program[]
  producerGroupId String?
  producerGroup   ProducerGroup? @relation(fields: [producerGroupId], references: [id])
  // customers       Customer[]
  portalUsers     PortalUser[]
  notes           Note[]
  main            Boolean        @default(true)

  @@index([producerGroupId])
  @@index([name])
}

model Note {
  id                 String           @id @default(uuid())
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  note               String
  producerLocationId String
  producerLocation   ProducerLocation @relation(fields: [producerLocationId], references: [id])

  @@index([producerLocationId])
}

model PortalUser {
  id                 String            @id @default(uuid())
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  email              String            @unique
  password           String
  firstName          String
  lastName           String
  phone              String
  role               String
  producerLocationId String
  producerLocation   ProducerLocation? @relation(fields: [producerLocationId], references: [id])

  @@index([producerLocationId])
}

model Program {
  id                 String           @id @default(uuid())
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  name               String
  markup             Markup[]
  producerLocationId String
  producerLocation   ProducerLocation @relation(fields: [producerLocationId], references: [id])

  @@index([producerLocationId])
}

model Markup {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  termValue   String
  markupValue String
  programId   String
  program     Program  @relation(fields: [programId], references: [id])

  @@index([programId])
}
